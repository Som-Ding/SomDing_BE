plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.4'
    id 'org.jetbrains.kotlin.kapt' version '1.9.25'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.9.25'
}

group = 'com.swcontest'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    kapt 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    kapt 'jakarta.annotation:jakarta.annotation-api'
    kapt 'jakarta.persistence:jakarta.persistence-api'

    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // MySQL
    runtimeOnly 'mysql:mysql-connector-java:8.0.32'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    kapt 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    kaptTest 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //jwt
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    // S3
    implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'



}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll('-Xjsr305=strict')
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

kapt {
    includeCompileClasspath = false
}

// NoArg 플러그인 설정
noArg {
    annotation("jakarta.persistence.Entity")
}

// allOpen 플러그인 설정
allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

noArg {
    annotation("jakarta.persistence.Entity")
}